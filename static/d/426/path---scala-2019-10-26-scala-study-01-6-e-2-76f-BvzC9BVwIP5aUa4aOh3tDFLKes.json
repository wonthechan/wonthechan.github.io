{"data":{"site":{"siteMetadata":{"title":"chan's devlog","author":"wonthechan (Yechan Lim)","siteUrl":"https://wonthechan.github.io","comment":{"disqusShortName":"","utterances":"wonthechan/wonthechan.github.io"}}},"markdownRemark":{"id":"6112ac21-b58e-562c-9964-329594b97544","excerpt":" 스칼라에서의 메소드 형태와 패턴매칭 기법에 대해서 간략하게 알아보고 이를 이용해 재귀와 반복문 형태의 팩토리얼과 피보나치수를 구하는 메소드를 작성해보자. 1.1 일반적인 재귀형태를 이용하여 팩토리얼을 구하는 메소드 1.2  ‘패턴매칭’을 이용하여 다시 작성. 1.3  반복문 형태로 팩토리얼 메소드를 구현. 2.1  패턴매칭을 이용하여 피보나치수를 구하는 메소드 2.2  반복문 형태로 피보나치수를 구하는 메소드 스칼라의 패턴매칭 기법은 기존 명령형 프로그래밍 언어에서 사용하는 Switch…","html":"<p> 스칼라에서의 메소드 형태와 패턴매칭 기법에 대해서 간략하게 알아보고 이를 이용해 재귀와 반복문 형태의 팩토리얼과 피보나치수를 구하는 메소드를 작성해보자.</p>\n<h4 id=\"11-일반적인-재귀형태를-이용하여-팩토리얼을-구하는-메소드\"><a href=\"#11-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%9E%AC%EA%B7%80%ED%98%95%ED%83%9C%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC%EC%9D%84-%EA%B5%AC%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"11 일반적인 재귀형태를 이용하여 팩토리얼을 구하는 메소드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.1 일반적인 재귀형태를 이용하여 팩토리얼을 구하는 메소드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span><span class=\"token operator\">*</span> Factorial Exercise <span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fac1</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> n <span class=\"token operator\">*</span> fac<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"12--패턴매칭을-이용하여-다시-작성\"><a href=\"#12--%ED%8C%A8%ED%84%B4%EB%A7%A4%EC%B9%AD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%EB%8B%A4%EC%8B%9C-%EC%9E%91%EC%84%B1\" aria-label=\"12  패턴매칭을 이용하여 다시 작성 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.2  ‘패턴매칭’을 이용하여 다시 작성.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span><span class=\"token operator\">*</span> Factorial Exercise <span class=\"token operator\">-</span> <span class=\"token string\">'Pattern Match'</span> <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fac2</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> n match <span class=\"token punctuation\">{</span>\n    case <span class=\"token number\">0</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span>\n    case _ <span class=\"token operator\">=</span><span class=\"token operator\">></span> n <span class=\"token operator\">*</span> fac<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"13--반복문-형태로-팩토리얼-메소드를-구현\"><a href=\"#13--%EB%B0%98%EB%B3%B5%EB%AC%B8-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%8C%A9%ED%86%A0%EB%A6%AC%EC%96%BC-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EA%B5%AC%ED%98%84\" aria-label=\"13  반복문 형태로 팩토리얼 메소드를 구현 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.3  반복문 형태로 팩토리얼 메소드를 구현.</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span><span class=\"token operator\">*</span> Factorial Exercise <span class=\"token operator\">-</span> iterative way <span class=\"token punctuation\">(</span>Nested Function<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fac3</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">fac_iter</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">></span> n<span class=\"token punctuation\">)</span> p <span class=\"token keyword\">else</span> fac_iter<span class=\"token punctuation\">(</span>p <span class=\"token operator\">*</span> k<span class=\"token punctuation\">,</span> k <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> \n    fac_iter<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"21--패턴매칭을-이용하여-피보나치수를-구하는-메소드\"><a href=\"#21--%ED%8C%A8%ED%84%B4%EB%A7%A4%EC%B9%AD%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%98%EC%97%AC-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"21  패턴매칭을 이용하여 피보나치수를 구하는 메소드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.1  패턴매칭을 이용하여 피보나치수를 구하는 메소드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span><span class=\"token operator\">*</span> Factorial Exercise <span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fac1</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> n <span class=\"token operator\">*</span> fac<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4 id=\"22--반복문-형태로-피보나치수를-구하는-메소드\"><a href=\"#22--%EB%B0%98%EB%B3%B5%EB%AC%B8-%ED%98%95%ED%83%9C%EB%A1%9C-%ED%94%BC%EB%B3%B4%EB%82%98%EC%B9%98%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"22  반복문 형태로 피보나치수를 구하는 메소드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.2  반복문 형태로 피보나치수를 구하는 메소드</h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span><span class=\"token operator\">*</span> Factorial Exercise <span class=\"token number\">1</span><span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">fac1</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token keyword\">else</span> n <span class=\"token operator\">*</span> fac<span class=\"token punctuation\">(</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>스칼라의 패턴매칭 기법은 기존 명령형 프로그래밍 언어에서 사용하는 Switch 문과 그 형태가 닮았으나 case 문에 수식이나 함수가 들어갈 수 있다는 점에서 다르다.</p>\n<p>이처럼 패턴매칭 기법을 이용하면 기존 Java에서 메소드를 작성하는 것과 달리 좀 더 직관적인 형태의 코드를 작성할 수 있게 된다.</p>","fields":{"slug":"/scala/2019-10-26-scala-study-01/"},"frontmatter":{"title":"[Scala] 스칼라 스터디 #1","date":"October 26, 2019"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/scala/2019-10-26-scala-study-01/","previous":{"fields":{"slug":"/scala/2019-10-25-scala-study-00/"},"frontmatter":{"title":"[Scala] 스칼라 스터디 #0","category":"scala"}},"next":null}}